{
	"info": {
		"_postman_id": "48aa8435-7b81-4daf-aea9-8cec72fbb28f",
		"name": "retroShop",
		"description": "# ü™ù Get started here\n\nWebhooks are a mechanism that allows services to send real-time notifications to your application regarding asynchronous updates. The collection provides endpoints for setting up and managing webhooks, as well as verifying webhook events.\n\nThis collection demonstrates how to interact with a payment gateway and processing API, focusing specifically on the implementation of webhooks.\n\n### üîê Authentication and Authorization\n\nThis template assumes the user making requests to the Webhooks API would be authenticated, for example using a Bearer token. You can choose an authentication method to apply to the whole collection by selecting the collection and navigating to the Authorization tab.\n\n## üîñ How to use this collection?\n\nThe collection is designed to be flexible and can be customized to meet the specific requirements of your own webhooks API implementation.\n\n#### Step 1: Update the base URL variable\n\nAdd your API's base URL in the `baseUrl` collection variable, replacing the existing dummy endpoint (`https://api.example.com`).\n\n#### Step 2: Create a webhook\n\nStart with `Create Webhook` endpoint to create a webhook and enter the following required information:\n\n- `webhook_url`: the name of the webhook that you're creating\n- `events`: (optional) Events that you want to trigger this webhook with. should be triggered on all events if none was provided.\n    \n\n#### **Step 3: Call the webhook**\n\nProceed to the `Trigger specific webhook` request. This call will utilize the `webhook_id` e.g. `W123456` set in the previous step. Under the **Body** tab, you can optionally update the payload to send.\n\n#### **Step 4: Verify various webhook payloads**\n\nTry sending several payloads to your webhooks with `Verify webhook` endpoint, and monitor your webhook server logs to verify if your webhooks are configured correctly as expected.\n\nYou can see an example of how to configure your webhook to be event-driven. We took Payment Gateway Service as an example here.\n\n#### **Step 5: Continue building the collection**\n\nCreate requests in this collection to test the new API endpoints you develop, and integrate your newly created webhooks in your other services.\n\n## ‚ÑπÔ∏è Resources\n\n[Build Webhook with Postman APIs (Video Tutorial)](https://www.youtube.com/watch?v=wdLvXKkXhLk)  \n[Postman's Custom Webhooks](https://learning.postman.com/docs/integrations/webhooks/)\n\n## üí°Related templates\n\n[Content management API](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=8b1997c9-1fb2-453d-81a3-cafd3bbe28ae&sourceTemplateId=88a124f3-20d3-412a-a6a2-3b58307a7b16)  \n[Social media API](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=ce4ff49c-12c2-4a99-891a-07eea2388174&sourceTemplateId=88a124f3-20d3-412a-a6a2-3b58307a7b16)  \n[File storage API](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=45d1f394-35cd-44fa-aecc-fa329a7752a3&sourceTemplateId=88a124f3-20d3-412a-a6a2-3b58307a7b16)  \n[IoT device management API](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=30ebe963-3019-49d3-8087-00b4709687ad&sourceTemplateId=88a124f3-20d3-412a-a6a2-3b58307a7b16)  \n[CRM API](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=dda283f2-49f5-4754-b204-0c89a95e626c&sourceTemplateId=88a124f3-20d3-412a-a6a2-3b58307a7b16)  \n[Payment gateway and processing API](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=2ef318a1-e16c-4761-b8dc-1ccb1167ee8d&sourceTemplateId=88a124f3-20d3-412a-a6a2-3b58307a7b16)  \n[Fintech banking API](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=3b33c827-d9c8-4738-8d3f-09c466007363&sourceTemplateId=88a124f3-20d3-412a-a6a2-3b58307a7b16)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29404184"
	},
	"item": [
		{
			"name": "login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"webhook_url\": \"https://api.example.com/webhooks/listener-for-payment-gateway\",\n  \"events\": [\"payment.created\", \"payment.updated\", \"transaction.created\", \"transaction.updated\", \"refund.created\", \"refund.updated\"]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/webhooks",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"webhooks"
					]
				},
				"description": "Creates a new webhook to receive real-time notifications for payment, transaction, and refund events.\n\nWhenever any of these events occur, the defined webhook `webhook_url` endpoint e.g. `https://api.example.com/webhooks/listener-for-payment-gateway` will receive a POST request with relevant data.\n\nAlso, you can configure your webhooks to be event-driven by default, as it will only be triggered when one of these system events is fired."
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"webhook_url\": \"https://api.example.com/webhooks/listener-for-payment-gateway\",\n  \"events\": [\"payment.created\", \"payment.updated\", \"transaction.created\", \"transaction.updated\", \"refund.created\", \"refund.updated\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"W123456\",\n    \"url\": \"https://api.example.com/webhooks/listener-for-payment-gateway\",\n    \"events\": [\n        \"payment.created\",\n        \"payment.updated\",\n        \"transaction.created\",\n        \"transaction.updated\",\n        \"refund.created\",\n        \"refund.updated\"\n    ],\n    \"created_at\": \"2023-01-01T12:00:00Z\"\n}"
				}
			]
		},
		{
			"name": "verify",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\n  \"email\":\"ffanecaa@gmail.com\",\n  \"password\":\"12345678\",\n  \"verificationCode\":\"\"\n  \n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3001/verify",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"verify"
					]
				},
				"description": "Creates a new webhook to receive real-time notifications for payment, transaction, and refund events.\n\nWhenever any of these events occur, the defined webhook `webhook_url` endpoint e.g. `https://api.example.com/webhooks/listener-for-payment-gateway` will receive a POST request with relevant data.\n\nAlso, you can configure your webhooks to be event-driven by default, as it will only be triggered when one of these system events is fired."
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"webhook_url\": \"https://api.example.com/webhooks/listener-for-payment-gateway\",\n  \"events\": [\"payment.created\", \"payment.updated\", \"transaction.created\", \"transaction.updated\", \"refund.created\", \"refund.updated\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"W123456\",\n    \"url\": \"https://api.example.com/webhooks/listener-for-payment-gateway\",\n    \"events\": [\n        \"payment.created\",\n        \"payment.updated\",\n        \"transaction.created\",\n        \"transaction.updated\",\n        \"refund.created\",\n        \"refund.updated\"\n    ],\n    \"created_at\": \"2023-01-01T12:00:00Z\"\n}"
				}
			]
		},
		{
			"name": "register",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\":\"usuario1\",\n  \"email\":\"123@gmail.com\",\n  \"password\":\"12345678\"\n  \n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3001/register",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"register"
					]
				},
				"description": "Creates a new webhook to receive real-time notifications for payment, transaction, and refund events.\n\nWhenever any of these events occur, the defined webhook `webhook_url` endpoint e.g. `https://api.example.com/webhooks/listener-for-payment-gateway` will receive a POST request with relevant data.\n\nAlso, you can configure your webhooks to be event-driven by default, as it will only be triggered when one of these system events is fired."
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"webhook_url\": \"https://api.example.com/webhooks/listener-for-payment-gateway\",\n  \"events\": [\"payment.created\", \"payment.updated\", \"transaction.created\", \"transaction.updated\", \"refund.created\", \"refund.updated\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"W123456\",\n    \"url\": \"https://api.example.com/webhooks/listener-for-payment-gateway\",\n    \"events\": [\n        \"payment.created\",\n        \"payment.updated\",\n        \"transaction.created\",\n        \"transaction.updated\",\n        \"refund.created\",\n        \"refund.updated\"\n    ],\n    \"created_at\": \"2023-01-01T12:00:00Z\"\n}"
				}
			]
		},
		{
			"name": "busquedaProductos",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n     \"price\": \"10.00\"\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3001/products/search",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"products",
						"search"
					]
				},
				"description": "Creates a new webhook to receive real-time notifications for payment, transaction, and refund events.\n\nWhenever any of these events occur, the defined webhook `webhook_url` endpoint e.g. `https://api.example.com/webhooks/listener-for-payment-gateway` will receive a POST request with relevant data.\n\nAlso, you can configure your webhooks to be event-driven by default, as it will only be triggered when one of these system events is fired."
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"webhook_url\": \"https://api.example.com/webhooks/listener-for-payment-gateway\",\n  \"events\": [\"payment.created\", \"payment.updated\", \"transaction.created\", \"transaction.updated\", \"refund.created\", \"refund.updated\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"W123456\",\n    \"url\": \"https://api.example.com/webhooks/listener-for-payment-gateway\",\n    \"events\": [\n        \"payment.created\",\n        \"payment.updated\",\n        \"transaction.created\",\n        \"transaction.updated\",\n        \"refund.created\",\n        \"refund.updated\"\n    ],\n    \"created_at\": \"2023-01-01T12:00:00Z\"\n}"
				}
			]
		},
		{
			"name": "crea producto sin id",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "  {\n      \n        \"name\": \"palna\",\n        \"category\": \"radio \",\n        \"price\": \"10.00\",\n        \"location\": \"ff\",\n        \"imageURL\": \"ff\",\n        \"description\": \"ff\",\n        \"sellerId\": 1\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3001/products",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"products"
					]
				},
				"description": "Creates a new webhook to receive real-time notifications for payment, transaction, and refund events.\n\nWhenever any of these events occur, the defined webhook `webhook_url` endpoint e.g. `https://api.example.com/webhooks/listener-for-payment-gateway` will receive a POST request with relevant data.\n\nAlso, you can configure your webhooks to be event-driven by default, as it will only be triggered when one of these system events is fired."
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"webhook_url\": \"https://api.example.com/webhooks/listener-for-payment-gateway\",\n  \"events\": [\"payment.created\", \"payment.updated\", \"transaction.created\", \"transaction.updated\", \"refund.created\", \"refund.updated\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"W123456\",\n    \"url\": \"https://api.example.com/webhooks/listener-for-payment-gateway\",\n    \"events\": [\n        \"payment.created\",\n        \"payment.updated\",\n        \"transaction.created\",\n        \"transaction.updated\",\n        \"refund.created\",\n        \"refund.updated\"\n    ],\n    \"created_at\": \"2023-01-01T12:00:00Z\"\n}"
				}
			]
		},
		{
			"name": "creacion producto por user",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiaWF0IjoxNzAyNDgwNzc4LCJleHAiOjE3MDMwODU1Nzh9.BWvqKamv-4IuConG1LKPX6B3IOiSNDK0mD3lp5Ae6o4",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "  {\n      \n        \"name\": \"palna\",\n        \"category\": \"radio \",\n        \"price\": \"10.00\",\n        \"location\": \"ff\",\n        \"imageURL\": \"ff\",\n        \"description\": \"ff\"\n      \n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3001/products/user",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"products",
						"user"
					]
				},
				"description": "Creates a new webhook to receive real-time notifications for payment, transaction, and refund events.\n\nWhenever any of these events occur, the defined webhook `webhook_url` endpoint e.g. `https://api.example.com/webhooks/listener-for-payment-gateway` will receive a POST request with relevant data.\n\nAlso, you can configure your webhooks to be event-driven by default, as it will only be triggered when one of these system events is fired."
			},
			"response": [
				{
					"name": "200 OK",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"webhook_url\": \"https://api.example.com/webhooks/listener-for-payment-gateway\",\n  \"events\": [\"payment.created\", \"payment.updated\", \"transaction.created\", \"transaction.updated\", \"refund.created\", \"refund.updated\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"W123456\",\n    \"url\": \"https://api.example.com/webhooks/listener-for-payment-gateway\",\n    \"events\": [\n        \"payment.created\",\n        \"payment.updated\",\n        \"transaction.created\",\n        \"transaction.updated\",\n        \"refund.created\",\n        \"refund.updated\"\n    ],\n    \"created_at\": \"2023-01-01T12:00:00Z\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://fcde83ce-ae2a-4165-bf7f-c2bb5f7fe762.mock.pstmn.io",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "dummy_token",
			"type": "string"
		}
	]
}